// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: scoring.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date int64 `protobuf:"varint,1,opt,name=Date,proto3" json:"Date,omitempty"`
}

func (x *Date) Reset() {
	*x = Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scoring_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Date) ProtoMessage() {}

func (x *Date) ProtoReflect() protoreflect.Message {
	mi := &file_scoring_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Date.ProtoReflect.Descriptor instead.
func (*Date) Descriptor() ([]byte, []int) {
	return file_scoring_proto_rawDescGZIP(), []int{0}
}

func (x *Date) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

type Score struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Score int64 `protobuf:"varint,1,opt,name=Score,proto3" json:"Score,omitempty"`
}

func (x *Score) Reset() {
	*x = Score{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scoring_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Score) ProtoMessage() {}

func (x *Score) ProtoReflect() protoreflect.Message {
	mi := &file_scoring_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Score.ProtoReflect.Descriptor instead.
func (*Score) Descriptor() ([]byte, []int) {
	return file_scoring_proto_rawDescGZIP(), []int{1}
}

func (x *Score) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type Period struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartDate *Date `protobuf:"bytes,1,opt,name=StartDate,proto3" json:"StartDate,omitempty"`
	EndDate   *Date `protobuf:"bytes,2,opt,name=EndDate,proto3" json:"EndDate,omitempty"`
}

func (x *Period) Reset() {
	*x = Period{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scoring_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Period) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Period) ProtoMessage() {}

func (x *Period) ProtoReflect() protoreflect.Message {
	mi := &file_scoring_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Period.ProtoReflect.Descriptor instead.
func (*Period) Descriptor() ([]byte, []int) {
	return file_scoring_proto_rawDescGZIP(), []int{2}
}

func (x *Period) GetStartDate() *Date {
	if x != nil {
		return x.StartDate
	}
	return nil
}

func (x *Period) GetEndDate() *Date {
	if x != nil {
		return x.EndDate
	}
	return nil
}

type CategoryScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryName string `protobuf:"bytes,1,opt,name=CategoryName,proto3" json:"CategoryName,omitempty"`
	Score        int64  `protobuf:"varint,2,opt,name=Score,proto3" json:"Score,omitempty"`
}

func (x *CategoryScore) Reset() {
	*x = CategoryScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scoring_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryScore) ProtoMessage() {}

func (x *CategoryScore) ProtoReflect() protoreflect.Message {
	mi := &file_scoring_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryScore.ProtoReflect.Descriptor instead.
func (*CategoryScore) Descriptor() ([]byte, []int) {
	return file_scoring_proto_rawDescGZIP(), []int{3}
}

func (x *CategoryScore) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *CategoryScore) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type DateScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date  string `protobuf:"bytes,1,opt,name=Date,proto3" json:"Date,omitempty"`
	Score int64  `protobuf:"varint,2,opt,name=Score,proto3" json:"Score,omitempty"`
}

func (x *DateScore) Reset() {
	*x = DateScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scoring_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DateScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DateScore) ProtoMessage() {}

func (x *DateScore) ProtoReflect() protoreflect.Message {
	mi := &file_scoring_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DateScore.ProtoReflect.Descriptor instead.
func (*DateScore) Descriptor() ([]byte, []int) {
	return file_scoring_proto_rawDescGZIP(), []int{4}
}

func (x *DateScore) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DateScore) GetScore() int64 {
	if x != nil {
		return x.Score
	}
	return 0
}

type ScoreByCategory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryScore *CategoryScore `protobuf:"bytes,1,opt,name=CategoryScore,proto3" json:"CategoryScore,omitempty"`
	Ratings       int64          `protobuf:"varint,2,opt,name=Ratings,proto3" json:"Ratings,omitempty"`
	DateScores    []*DateScore   `protobuf:"bytes,3,rep,name=DateScores,proto3" json:"DateScores,omitempty"`
}

func (x *ScoreByCategory) Reset() {
	*x = ScoreByCategory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scoring_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreByCategory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreByCategory) ProtoMessage() {}

func (x *ScoreByCategory) ProtoReflect() protoreflect.Message {
	mi := &file_scoring_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreByCategory.ProtoReflect.Descriptor instead.
func (*ScoreByCategory) Descriptor() ([]byte, []int) {
	return file_scoring_proto_rawDescGZIP(), []int{5}
}

func (x *ScoreByCategory) GetCategoryScore() *CategoryScore {
	if x != nil {
		return x.CategoryScore
	}
	return nil
}

func (x *ScoreByCategory) GetRatings() int64 {
	if x != nil {
		return x.Ratings
	}
	return 0
}

func (x *ScoreByCategory) GetDateScores() []*DateScore {
	if x != nil {
		return x.DateScores
	}
	return nil
}

type ScoresByCategories struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoresByCategories []*ScoreByCategory `protobuf:"bytes,1,rep,name=ScoresByCategories,proto3" json:"ScoresByCategories,omitempty"`
}

func (x *ScoresByCategories) Reset() {
	*x = ScoresByCategories{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scoring_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoresByCategories) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoresByCategories) ProtoMessage() {}

func (x *ScoresByCategories) ProtoReflect() protoreflect.Message {
	mi := &file_scoring_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoresByCategories.ProtoReflect.Descriptor instead.
func (*ScoresByCategories) Descriptor() ([]byte, []int) {
	return file_scoring_proto_rawDescGZIP(), []int{6}
}

func (x *ScoresByCategories) GetScoresByCategories() []*ScoreByCategory {
	if x != nil {
		return x.ScoresByCategories
	}
	return nil
}

type ScoreByTicket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketId       int64            `protobuf:"varint,1,opt,name=ticketId,proto3" json:"ticketId,omitempty"`
	CategoryScores []*CategoryScore `protobuf:"bytes,2,rep,name=CategoryScores,proto3" json:"CategoryScores,omitempty"`
}

func (x *ScoreByTicket) Reset() {
	*x = ScoreByTicket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scoring_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreByTicket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreByTicket) ProtoMessage() {}

func (x *ScoreByTicket) ProtoReflect() protoreflect.Message {
	mi := &file_scoring_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreByTicket.ProtoReflect.Descriptor instead.
func (*ScoreByTicket) Descriptor() ([]byte, []int) {
	return file_scoring_proto_rawDescGZIP(), []int{7}
}

func (x *ScoreByTicket) GetTicketId() int64 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

func (x *ScoreByTicket) GetCategoryScores() []*CategoryScore {
	if x != nil {
		return x.CategoryScores
	}
	return nil
}

type ScoresByTickets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScoresByTickets []*ScoreByTicket `protobuf:"bytes,1,rep,name=ScoresByTickets,proto3" json:"ScoresByTickets,omitempty"`
}

func (x *ScoresByTickets) Reset() {
	*x = ScoresByTickets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_scoring_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoresByTickets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoresByTickets) ProtoMessage() {}

func (x *ScoresByTickets) ProtoReflect() protoreflect.Message {
	mi := &file_scoring_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoresByTickets.ProtoReflect.Descriptor instead.
func (*ScoresByTickets) Descriptor() ([]byte, []int) {
	return file_scoring_proto_rawDescGZIP(), []int{8}
}

func (x *ScoresByTickets) GetScoresByTickets() []*ScoreByTicket {
	if x != nil {
		return x.ScoresByTickets
	}
	return nil
}

var File_scoring_proto protoreflect.FileDescriptor

var file_scoring_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x73, 0x63, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x1a, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x44, 0x61, 0x74, 0x65, 0x22, 0x1d, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x22, 0x5e, 0x0a, 0x06, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x2b, 0x0a,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x09, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x45, 0x6e,
	0x64, 0x44, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x07, 0x45, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x22, 0x49, 0x0a, 0x0d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x35,
	0x0a, 0x09, 0x44, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x9d, 0x01, 0x0a, 0x0f, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x42,
	0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3c, 0x0a, 0x0d, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x73, 0x12, 0x32, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x44, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0a, 0x44, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x22, 0x5e, 0x0a, 0x12, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42,
	0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x48, 0x0a, 0x12, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x52, 0x12, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x6b, 0x0a, 0x0d, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x79,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x0e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x73, 0x22, 0x53, 0x0a, 0x0f, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42,
	0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x79,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0f, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x32, 0xc7, 0x02, 0x0a, 0x0e, 0x53, 0x63, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x20, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4f, 0x76,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4f, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x1a,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73,
	0x42, 0x79, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x22, 0x00, 0x12, 0x50,
	0x0a, 0x21, 0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4f, 0x66, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x42, 0x79, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x00,
	0x12, 0x4a, 0x0a, 0x25, 0x47, 0x65, 0x74, 0x4f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x4f, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x1a, 0x0e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x1e,
	0x47, 0x65, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4f, 0x76,
	0x65, 0x72, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x4f, 0x66, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x0f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x1a,
	0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22,
	0x00, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_scoring_proto_rawDescOnce sync.Once
	file_scoring_proto_rawDescData = file_scoring_proto_rawDesc
)

func file_scoring_proto_rawDescGZIP() []byte {
	file_scoring_proto_rawDescOnce.Do(func() {
		file_scoring_proto_rawDescData = protoimpl.X.CompressGZIP(file_scoring_proto_rawDescData)
	})
	return file_scoring_proto_rawDescData
}

var file_scoring_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_scoring_proto_goTypes = []interface{}{
	(*Date)(nil),               // 0: service.Date
	(*Score)(nil),              // 1: service.Score
	(*Period)(nil),             // 2: service.Period
	(*CategoryScore)(nil),      // 3: service.CategoryScore
	(*DateScore)(nil),          // 4: service.DateScore
	(*ScoreByCategory)(nil),    // 5: service.ScoreByCategory
	(*ScoresByCategories)(nil), // 6: service.ScoresByCategories
	(*ScoreByTicket)(nil),      // 7: service.ScoreByTicket
	(*ScoresByTickets)(nil),    // 8: service.ScoresByTickets
}
var file_scoring_proto_depIdxs = []int32{
	0,  // 0: service.Period.StartDate:type_name -> service.Date
	0,  // 1: service.Period.EndDate:type_name -> service.Date
	3,  // 2: service.ScoreByCategory.CategoryScore:type_name -> service.CategoryScore
	4,  // 3: service.ScoreByCategory.DateScores:type_name -> service.DateScore
	5,  // 4: service.ScoresByCategories.ScoresByCategories:type_name -> service.ScoreByCategory
	3,  // 5: service.ScoreByTicket.CategoryScores:type_name -> service.CategoryScore
	7,  // 6: service.ScoresByTickets.ScoresByTickets:type_name -> service.ScoreByTicket
	2,  // 7: service.ScoringService.GetCategoryScoreOverPeriodOfTime:input_type -> service.Period
	2,  // 8: service.ScoringService.GetScoresByTicketOverPeriodOfTime:input_type -> service.Period
	2,  // 9: service.ScoringService.GetOveralQualityScoreOverPeriodOfTime:input_type -> service.Period
	2,  // 10: service.ScoringService.GetScoreChangeOverPeriodOfTime:input_type -> service.Period
	6,  // 11: service.ScoringService.GetCategoryScoreOverPeriodOfTime:output_type -> service.ScoresByCategories
	8,  // 12: service.ScoringService.GetScoresByTicketOverPeriodOfTime:output_type -> service.ScoresByTickets
	1,  // 13: service.ScoringService.GetOveralQualityScoreOverPeriodOfTime:output_type -> service.Score
	1,  // 14: service.ScoringService.GetScoreChangeOverPeriodOfTime:output_type -> service.Score
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_scoring_proto_init() }
func file_scoring_proto_init() {
	if File_scoring_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_scoring_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scoring_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Score); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scoring_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Period); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scoring_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scoring_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DateScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scoring_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreByCategory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scoring_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoresByCategories); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scoring_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreByTicket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_scoring_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoresByTickets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_scoring_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_scoring_proto_goTypes,
		DependencyIndexes: file_scoring_proto_depIdxs,
		MessageInfos:      file_scoring_proto_msgTypes,
	}.Build()
	File_scoring_proto = out.File
	file_scoring_proto_rawDesc = nil
	file_scoring_proto_goTypes = nil
	file_scoring_proto_depIdxs = nil
}
